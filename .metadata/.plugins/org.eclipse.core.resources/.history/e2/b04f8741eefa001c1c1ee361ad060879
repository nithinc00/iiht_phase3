package com.project.auction.controllers;

import java.io.IOException;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;

import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest;
import com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse;
import com.google.api.client.http.javanet.NetHttpTransport;
//import com.google.api.client.json.jackson2.JacksonFactory;
import com.project.auction.services.UserService;

@RestController
public class UserController{
	final String CLIENT_ID = "381472079955-jah68q207j1o6hpsevb4u3niqc79ud81.apps.googleusercontent.com";
    final String CLIENT_SECRET = "K8f5M0PIq6PvubQYUWgwarh2";

    final String passwordSalt = "keyboard-kitten";
    
    @Autowired
    private UserService userService;
    
    @Resource(name="authenticationManager")
    private AuthenticationManager authManager;
    
    @PostMapping("/storeauthcode")
    public String storeauthcode(@RequestBody String code, @RequestHeader("X-Requested-With") String encoding, HttpServletRequest req) {
    	if(encoding == null || encoding.isEmpty()) {
    		return "Error, wrong headers";
    	}
    	GoogleTokenResponse tokenResponse = null;
    	try {
    		tokenResponse = new GoogleAuthorizationCodeTokenRequest(
    				new NetHttpTransport(),
    				JacksonFactory.getDefaultInstance(),
                    "https://www.googleapis.com/oauth2/v4/token",
                    CLIENT_ID,
                    CLIENT_SECRET,
                    code,
                    "http://localhost:9000")
    				.execute();
    	}catch(IOException e) {
    		e.printStackTrace();
    	}
    	
    
    }
}